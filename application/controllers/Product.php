<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Product extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Product_model');
		   $this->load->model('User_model');
    } 

    /*
     * Listing of product
     */
    function index()
    {
		  $prductid = $this->session->userdata('productid');
        $data['product'] = $this->Product_model->get_all_product();
         $userid = $this->session->userdata('userid');
        $data['users'] = $this->User_model->get_user($userid);
        $data['_view'] = 'product/index';
        $this->load->view('layouts/main1',$data);
    }

    /*
     * Adding a new product
     */
    function add()
    {   
	    if(isset($_POST) && count($_POST) > 0)
        {
            $a= $_FILES ['userfile']['name'];
            $b = explode(" ", $a);
            $filename = implode("_",$b);

            date_default_timezone_set('Asia/Kathmandu');
            $now = date('Y:m:d H:i:s');
			$params = array(
				'ProductName' => $this->input->post('ProductName'),
				'Price' => $this->input->post('Price'),
				'Photo' =>  $filename,
            );

            $config['upload_path']          = './images/userimages/';
            $config['allowed_types']        = 'gif|jpg|png|jpeg|JPG|PNG';
            $config['max_size']             = 100;
            $config['max_width']            = 1024;
            $config['max_height']           = 768;
            $this->load->library('upload', $config);
			$this->upload->initialize($config);
            if ($this->upload->do_upload('userfile'))
            {
                $product_id = $this->Product_model->add_product($params);
                $error =array('error' => "Added Successfully" );
                $this->session->set_flashdata('msg',$error);
//                    $data['_view'] = 'user/add';
//                    $this->load->view('layouts/main',$data);
                redirect($_SERVER['HTTP_REFERER']);
            }
            else
            {
                $error = array('error' => $this->upload->display_errors());
                $this->session->set_flashdata('msg',$error);
				$userid = $this->session->userdata('userid');
				$data['users'] = $this->User_model->get_user($userid);
                $data['_view'] = 'product/add';
                $this->load->view('layouts/main1',$data);
            }


//            $user_id = $this->User_model->add_user($params);
//            $this->session->set_flashdata('msg',"Successfully");
//            $this->session->set_flashdata('msg_class','alert-success');
//            redirect($_SERVER['HTTP_REFERER']);
        }
        else
        { 
		$userid = $this->session->userdata('userid');
        $data['users'] = $this->User_model->get_user($userid);
            $data['_view'] = 'product/add';
            $this->load->view('layouts/main1',$data);
        }	
    }  

    /*
     * Editing a product
     */
    function edit($ProductId)
    {   
        // check if the product exists before trying to edit it
        $data['product'] = $this->Product_model->get_product($ProductId);
        
        if(isset($data['product']['ProductId']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'ProductName' => $this->input->post('ProductName'),
					'Price' => $this->input->post('Price'),
					'Photo' =>  $filename,
                );

                $this->Product_model->update_product($ProductId,$params);            
                redirect('product/index');
            }
            else
            {
				 $userid = $this->session->userdata('userid');
				$data['users'] = $this->User_model->get_user($userid);
                $data['_view'] = 'product/edit';
                $this->load->view('layouts/main1',$data);
            }
        }
        else
            show_error('The product you are trying to edit does not exist.');
    } 

    /*
     * Deleting product
     */
    function remove($ProductId)
    {
        $product = $this->Product_model->get_product($ProductId);

        // check if the product exists before trying to delete it
        if(isset($product['ProductId']))
        {
            $this->Product_model->delete_product($ProductId);
            redirect('product/index');
        }
        else
            show_error('The product you are trying to delete does not exist.');
    }
    
}
